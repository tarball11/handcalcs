% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci.R
\name{solve_ci_t}
\alias{solve_ci_t}
\alias{ci_t_formula}
\title{Confidence Intervals Around Sample Mean (using \emph{t} distribution)}
\usage{
solve_ci_t(M, SD, n, df, s_M, level = 0.95, ...)

ci_t_formula(level = 0.95, ...)
}
\arguments{
\item{M}{Numeric scalar. Sample mean.}

\item{SD}{Numeric scalar. Population standard deviation. Required if s_M
is not provided.}

\item{n}{Numeric scalar. Sample size. Required if s_M is not provided.}

\item{df}{Numeric scalar. Degrees of freedom. Required if n is not provided.}

\item{s_M}{Numeric scalar. Standard error of the mean. If not provided, will
be calculated from \code{SD} and \code{n} (using \code{\link[=solve_s_M]{solve_s_M()}}) and included in
the solution string.}

\item{level}{Numeric scalar. Confidence level; defaults to 0.95 (95\%
confidence intervals).}

\item{...}{Additional arguments to override default behaviors (see
\code{\link[=handcalcs_defaults]{handcalcs_defaults()}}}
}
\value{
\code{solve_ci_t()} returns a list with the provided values (\code{M}, \code{SD},
\code{n}, \code{s_M}), the interim calculations (\code{s_M}, \code{t_crit}, \code{marg_err}), the
final value (\code{CI_lower}, \code{CI_upper}, as well as a named vector containing
both values \code{CI}), the solution string (\code{solution}), and the bare formula
(\code{formula}) in LaTeX format. \code{ci_t_formula()} returns just the bare formula
in LaTeX format as a character string.
}
\description{
Calculates confidence intervals around a sample mean wwhen the population
standard deviation (\eqn{\sigma}) must be estimated using the sample standard
deviation (\eqn{s}, aka \code{SD}) \eqn{M \pm (t_{1 - \alpha/2})(s_{M})}. May
either provide \code{s_M}, or that value can be calculated from \code{SD} and \code{n}.
}
\details{
Note that the critical value of \emph{t} (\code{t_crit}) is rounded to the value of
\code{round_t} instead of the value of \code{round_interim} or \code{round_final} (see
\code{\link[=handcalcs_defaults]{handcalcs_defaults()}}).
}
\examples{

solve_ci_t(M = 5, s_M = 0.2)

# Defaults to 95\% CIs, but other levels can be specified:
solve_ci_t(M = 5, s_M = 0.2, level = 0.99)

# Will calculate s_M if SD and n are provided, and include the
# calculation in the solution string
solve_ci_t(M = 5, SD = 2, n = 100)

# Note: if s_M is provided, will ignore SD and n values
solve_ci_t(M = 5, SD = 2, n = 100, s_M = 4)

# If you just want the formula:
ci_t_formula()

}
